version: 2.1 # CircleCI version number

#### Orbs ####
orbs:
  python: circleci/python@1.4.0 
  heroku: circleci/heroku@1.2.6 # Deploy application with minimal config to Heroku using CircleCI authored
  slack: circleci/slack@4.6.3 # Slack Notifications
  snyk: snyk/snyk@1.1.2
  sonarcloud: sonarsource/sonarcloud@1.0.3

################################################################################
# Workflows
################################################################################
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - test
      - Scan via SonarCloud:
          context: SonarCloud
          requires:
            - build
            - test
      - Scan via Synk:
          requires:
            - Scan via SonarCloud       
      - hold:
          type: approval
          requires:
            - Scan via Synk
      - heroku/deploy-via-git:
          requires:
          - hold
          filters:
           branches:
            only: master

################################################################################
# Defining jobs inside 
###############################################################################
jobs:
  build: 
    working_directory: ~/Webapplications
    docker:
      - image: circleci/python:3.9.2-browsers  # convience image
    resource_class: small
    steps:
    - checkout
    - restore_cache:
        key: pip-packages-v1-{{.Branch}}-{{ checksum "requirements/dev.txt" }}
    - run:
        name: Creating venv and Installing Python Dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements/dev.txt    
    - save_cache:
        key: pip-packages-v1-{{.Branch}}-{{ checksum "requirements/dev.txt" }}
        paths:
          - 'venv'
    - run:
        name: Activate venv and Checking python version
        command: |
          . venv/bin/activate
          python --version 
Scan via SonarCloud:
      working_directory: ~/Webapplications
      docker:
      - image: cimg/node:12.18.1
      resource_class: large
      steps:
      - checkout
      - sonarcloud/scan
Scan via Snyk:
  steps:
    - synk/scan


test:     
  working_directory: ~/Webapplications
  docker:
    - image: circleci/python:3.9.2-browsers
  parallelism: 4
  resource_class: medium # Resource Class defined as Medium
  steps:
    - checkout 
    - run: 
        name: Creating test report Directory
        command: mkdir test-reports
    - run:
        name: Download Selenium # Downloading Selenium
        command: |
          curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
    - run:
        name: Start Selenium
        command: |
          java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
        background: true
    - restore_cache:
        key: pip-packages-v1-{{.Branch}}-{{ checksum "requirements/dev.txt" }}
    - run:
        name: Creating venv and Installing Python Dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements/dev.txt      
    - save_cache:
        key: pip-packages-v1-{{.Branch}}-{{ checksum "requirements/dev.txt" }}
        paths:
          - 'venv'
    - run:
        name: Running Test
        command: |
          . venv/bin/activate
          python manage.py test
          
    - store_artifacts: # Artifacts displays test data after a workflow finishes 
        path: test-reports/
        destination: tr1
    - store_test_results:
        path: test-reports/ 
        
          